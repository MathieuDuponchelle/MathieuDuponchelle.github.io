fragment_downloaded_cb({"url":"2018-02-01-Python-Elements.html#liveness","fragment":"Liveness\nThree things are needed to output data in \"live\" mode:\nCalling GstBase.BaseSrc.set_live(True)\nReporting the latency by handling the LATENCY query, which is what we do\nin do_gst_base_src_query. The attentive reader might have noticed that\neven though the GstBaseSrc virtual method is named query, we didn't\nimplement it as do_query: that is because GstElement also exposes\na virtual method with the same name, and we have to lift the ambiguity.\nTry implementing do_query and see what happens.\nImplementing get_times to let the base class know when it should actually\npush the buffer out.\nOur element does all three things, and exposes a property named is-live to\ncontrol that behaviour, you can verify it as follows:\nas opposed to:\nIn this context, we are not really producing data live, but simply simulating\nby having the base class wait\n\n\nCalling GstBase.BaseSrc.set_live(True)\n\n\nReporting the latency by handling the LATENCY query, which is what we do\nin do_gst_base_src_query. The attentive reader might have noticed that\neven though the GstBaseSrc virtual method is named query, we didn't\nimplement it as do_query: that is because GstElement also exposes\na virtual method with the same name, and we have to lift the ambiguity.\nTry implementing do_query and see what happens.\n\n\nImplementing get_times to let the base class know when it should actually\npush the buffer out.\n\n\n"});