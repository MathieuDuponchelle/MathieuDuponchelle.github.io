fragment_downloaded_cb({"url":"2018-02-15-Python-Elements-2.html#decoupling-input-and-output","fragment":"Decoupling input and output\nThe initial version of this element only implemented do_transform, and simply\nplotted one output buffer per input buffer. This produced a kaleidoscopic effect\nand slaved the framerate to samplerate / samplesperbuffer.\nBaseTransform exposes a virtual method that allows producing 0 to N output\nbuffers per buffer instead, do_generate_output:\nWhen a new buffer is chained on the sink pad, do_generate_output is called\nrepeatedly as long as it returns Gst.FlowReturn.OK and a buffer: thanks to that\nwe can fill our ringbuffer and only return a frame once we have processed\nenough new samples to reach our next time. Conversely we can produce multiple\nframes if the size of the input buffer warrants it.\nHere again, the rest of the function is made up of implementation details,\nan important point to note is that we still expose do_transform, as\nBaseTransform assumes otherwise that the element will operate in passthrough\nmode, which obviously creates some interesting problems.\n"});