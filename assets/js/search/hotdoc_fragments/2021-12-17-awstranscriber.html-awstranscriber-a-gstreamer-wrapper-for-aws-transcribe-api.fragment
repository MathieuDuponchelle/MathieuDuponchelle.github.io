fragment_downloaded_cb({"url":"2021-12-17-awstranscriber.html#awstranscriber-a-gstreamer-wrapper-for-aws-transcribe-api","fragment":"awstranscriber, a GStreamer wrapper for AWS Transcribe API\nIf all you want to know is how to use the element, you can head over here.\nI actually implemented this element over a year ago, but never got around to\nposting about it, so this will be the first post in a series about speech-to-text,\ntext processing and closed captions in GStreamer.\nSpeech-to-text has a long history, with multiple open source libraries implementing\na variety of approaches for that purpose[1],\nbut they don't necessarily offer either the same accuracy or ease of use as proprietary\nservices such as Amazon's Transcribe API.\nMy overall goal for the project, which awstranscriber was only a part of, was the\nability to generate a transcription for live streams and inject it into the video\nbitstream or carry it alongside.\nThe main requirements were to keep it as synchronized as possible with the content,\nwhile keeping latency in check. We'll see how these requirements informed the design\nof some of the elements, in particular when it came to closed captions.\nMy initial intuition about text was, to quote a famous philosopher: \"How hard can\nit be?\"; turns out the answer was \"actually more than I would have hoped\".\n"});