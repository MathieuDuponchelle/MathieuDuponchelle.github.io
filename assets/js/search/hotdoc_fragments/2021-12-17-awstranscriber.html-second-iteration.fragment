fragment_downloaded_cb({"url":"2021-12-17-awstranscriber.html#second-iteration","fragment":"Second iteration\nSupposedly, you always need to write a piece of code three times before it's\ngood, but I'm happy with two in this case.\n6 months ago or so, I stumbled upon an innocuously titled blog post from\nAWS' machine learning team:\nImprove the streaming transcription experience with Amazon Transcribe partial results stabilization\nAnd with those few words, all my problems were gone!\nIn practice when this feature is enabled, the individual words that form a\npartial result are explicitly marked as stable: once that is the case, they will\nno longer change, either in terms of timing or contents.\nArmed with this, I simply removed all the ugly, complex, scarily fragile code\nfrom the previous iteration, and replaced it all with a single, satisfyingly\nsimple index variable: when receiving a new partial result, simply push all\nwords from index to last_stable_result, update index, done.\nThe output was not negatively impacted in any way, in fact now the element\nactually pushes out punctuation reliably as well, which doesn't hurt.\nI also exposed a property on the element to let the user control how\naggressively the service actually stabilizes results, offering a\ntrade-off between latency and accuracy.\n"});